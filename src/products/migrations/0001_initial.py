# Generated by Django 3.2.8 on 2022-02-03 11:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Загаловок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Цена')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Дата Создания')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Дата изменение')),
            ],
            options={
                'verbose_name': 'Апарат Майнинга',
                'verbose_name_plural': 'Апараты Майнинга',
            },
        ),
        migrations.CreateModel(
            name='Table_Headers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Загаловок')),
            ],
            options={
                'verbose_name': 'Загаловоки строк в таблицах',
                'verbose_name_plural': 'Загаловоки строк в таблицах',
            },
        ),
        migrations.CreateModel(
            name='Table_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название')),
                ('count', models.FloatField(blank=True, null=True, verbose_name='Количевство в месяц')),
                ('totality', models.FloatField(blank=True, null=True, verbose_name='Совокупность в месяц')),
                ('price', models.IntegerField(blank=True, verbose_name='Цена')),
                ('price_device', models.IntegerField(blank=True, null=True, verbose_name='Доступно за 1 апарат')),
                ('price_per_quantity', models.IntegerField(blank=True, null=True, verbose_name='Доступная цена за количевство апаратов')),
            ],
            options={
                'verbose_name': 'Продукт в таблице',
                'verbose_name_plural': 'Продукт в таблице',
            },
        ),
        migrations.CreateModel(
            name='ItemDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_items', to='products.device', verbose_name='К продукту')),
            ],
            options={
                'verbose_name': 'Количевство Апаратов',
                'verbose_name_plural': 'Количевство Апаратов',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество')),
                ('data_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.table_product')),
            ],
            options={
                'verbose_name': 'Товар в корзине',
                'verbose_name_plural': 'Товары в корзине',
            },
        ),
    ]
